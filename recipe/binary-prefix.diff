--- src/ppl-config.cc.in.bak    2022-03-17 01:54:24.000000000 -0700
+++ src/ppl-config.cc.in        2022-03-17 02:56:33.000000000 -0700
@@ -645,6 +645,7 @@
       std::string cppflags = "@CPPFLAGS@";
       std::string s = "@includedir@";
       replace_prefixes(s);
+      replace_prefixes(cppflags);
       // `/usr/include' is the standard include directory:
       // thus it needs not be specified.
       if (s == "/usr/include")
@@ -654,29 +655,39 @@
         // Avoid duplicating the -I options.
         if (cppflags.find(s) != std::string::npos)
           s = "";
-        if (s.length() > 0 && strlen("@CPPFLAGS@") > 0)
+        if (s.length() > 0 && cppflags.length() > 0)
           s += ' ';
-        s += "@CPPFLAGS@";
+        s += cppflags;
       }
       if (s.length() > 0 && strlen("@extra_includes@") > 0)
           s += ' ';
       s += "@extra_includes@";
       portray("CPPFLAGS", s);
     }
-    else
-      portray("CPPFLAGS", "@CPPFLAGS@");
+    else {
+      std::string cppflags = "@CPPFLAGS@";
+      replace_prefixes(cppflags);
+      portray("CPPFLAGS", cppflags);
+    }
   }
 
-  if (required_cflags)
-    portray("CFLAGS", "@CFLAGS@");
+  if (required_cflags) {
+    std::string cflags = "@CFLAGS@";
+    replace_prefixes(cflags);
+    portray("CFLAGS", cflags);
+  }
 
-  if (required_cxxflags)
-    portray("CXXFLAGS", "@CXXFLAGS@");
+  if (required_cxxflags) {
+    std::string cxxflags = "@CXXFLAGS@";
+    replace_prefixes(cxxflags);
+    portray("CXXFLAGS", cxxflags);
+  }
 
   if (required_ldflags) {
     std::string s = "@libdir@";
     replace_prefixes(s);
-    const std::string ldflags = "@LDFLAGS@";
+    std::string ldflags = "@LDFLAGS@";
+    replace_prefixes(ldflags);
     // `/usr/lib' is the standard library directory:
     // thus it needs not be specified.
     if (s == "/usr/lib")
